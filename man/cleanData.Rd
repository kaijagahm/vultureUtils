% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mainFunctions.R
\name{cleanData}
\alias{cleanData}
\title{Clean data}
\usage{
cleanData(
  dataset,
  gpsMaxTime = -1,
  precise = F,
  longCol = "location_long.1",
  latCol = "location_lat.1",
  idCol = "Nili_id",
  removeVars = T,
  report = T,
  ...
)
}
\arguments{
\item{dataset}{The GPS dataset to be used to create the edge list. Must contain columns specified by `longCol`, `latCol`, and `dateCol` args. Must also contain columns "gps_time_to_fix", "heading", "gps_satellite_count", and "ground_speed" because data cleaning is based on this info.}

\item{gpsMaxTime}{Max time for gps to communicate with satellites. If less than 0, do not filter based on max time. Default is -1.}

\item{precise}{Higher quality filter (satellites > 4 and hdop < 5). Default is F.}

\item{longCol}{The name of the column in the dataset containing longitude values. Defaults to "location_long.1".}

\item{latCol}{The name of the column in the dataset containing latitude values. Defaults to "location_lat.1".}

\item{idCol}{The name of the column in the dataset containing vulture ID's. Defaults to "Nili_id" (assuming you have joined the Nili_ids from the who's who table).}

\item{removeVars}{Whether or not to remove unnecessary variables from movebank download. Default is T.}

\item{report}{Default TRUE. Whether to print a report of how many rows/individuals were removed in each of the data cleaning steps.}

\item{...}{additional arguments to be passed to any of several functions: `vultureUtils::removeUnnecessaryVars()` (`addlVars`, `keepVars`);}
}
\value{
An edge list containing the following columns: `timegroup` gives the numeric index of the timegroup during which the interaction takes place. `minTimestamp` and `maxTimestamp` give the beginning and end times of that timegroup. `ID1` is the id of the first individual in this edge, and `ID2` is the id of the second individual in this edge.
}
\description{
This function takes in a raw dataset downloaded from movebank, masks it, and performs basic data cleaning. The output from this function feeds directly into `vultureUtils::spaceTimeGroups()`.
}
