% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wrappers.R
\name{getFlightEdges}
\alias{getFlightEdges}
\title{Create co-flight edge list}
\usage{
getFlightEdges(
  cleanedInMask,
  roostPolygons,
  roostBuffer = 50,
  consecThreshold = 2,
  distThreshold = 1000,
  speedThreshUpper = NULL,
  speedThreshLower = 5
)
}
\arguments{
\item{cleanedInMask}{The cleaned GPS dataset to be used to create the edge list. This should be the output from `vultureUtils::cleanData()`.}

\item{roostPolygons}{Roost polygons. Must be an sf object with a CRS that matches the dataset CRS.}

\item{roostBuffer}{Number of meters to buffer the roost polygons by before intersecting them. Default is 50 m.}

\item{consecThreshold}{Minimal number of co-occurrences for considering a viable pair of interacting vultures (default is 2 consecutive time steps). Passed to `vultureUtils::spaceTimeGroups()`. Must be numeric.}

\item{distThreshold}{The maximum distance (in meters) at which vultures are considered interacting. Default is 1000 m for co-flight Passed to `vultureUtils::spaceTimeGroups()`. Must be numeric.}

\item{speedThreshUpper}{Upper speed threshold, in m/s. For co-flight, default is NULL. Passed to `vultureUtils::filterLocs()`. Must be numeric.}

\item{speedThreshLower}{Lower speed threshold, in m/s. For co-flight, default is 5 m/s. Passed to `vultureUtils::filterLocs()`. Must be numeric.}

\item{mask}{The object to use to mask the data. Passed to `vultureUtils::maskData()`. Must be an sf object.}
}
\value{
An edge list containing the following columns: `timegroup` gives the numeric index of the timegroup during which the interaction takes place. `minTimestamp` and `maxTimestamp` give the beginning and end times of that timegroup. `ID1` is the trackID of the first individual in this edge, and `ID2` is the trackID of the second individual in this edge.
}
\description{
Given a dataset of GPS points, a geographic mask, and some roost polygons, create an edge list.
}
