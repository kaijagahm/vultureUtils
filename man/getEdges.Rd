% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mainFunctions.R
\name{getEdges}
\alias{getEdges}
\title{Create an edge list (flexible; must insert parameters.)}
\usage{
getEdges(
  dataset,
  roostPolygons,
  roostBuffer,
  consecThreshold,
  distThreshold,
  speedThreshUpper,
  speedThreshLower,
  timeThreshold = "10 minutes",
  idCol = "Nili_id",
  quiet = T,
  includeAllVertices = F,
  daytimeOnly = T,
  return = "edges"
)
}
\arguments{
\item{dataset}{The cleaned GPS dataset to be used to create the edge list. This should be the output from `vultureUtils::cleanData()`. Must include the columns "ground_speed", "dateOnly", and "timestamp", as well as "location_lat" and "location_long" (which will be passed to `spaceTimeGroups`). XXX edit this: GH#58}

\item{roostPolygons}{Roost polygons. Must be an sf object with a CRS that matches the dataset CRS.}

\item{roostBuffer}{Number of meters to buffer the roost polygons by before intersecting them.}

\item{consecThreshold}{Minimal number of co-occurrences for considering a viable pair of interacting vultures. Passed to `vultureUtils::spaceTimeGroups()`. Must be numeric.}

\item{distThreshold}{The maximum distance (in meters) at which vultures are considered interacting. Passed to `vultureUtils::spaceTimeGroups()`. Must be numeric.}

\item{speedThreshUpper}{Upper speed threshold, in m/s.}

\item{speedThreshLower}{Lower speed threshold, in m/s.}

\item{timeThreshold}{timeThreshold Passed to spatsoc::group_times. Threshold for grouping times. e.g.: '2 hours', '10 minutes', etc. if not provided, times will be matched exactly. Note that provided threshold must be in the expected format: '## unit'. Default is "10 minutes"}

\item{idCol}{Passed to spaceTimeGroups: the name of the column containing individual vulture ID's. Default is Nili_id.}

\item{quiet}{Whether to silence the warning messages about grouping individuals with themselves inside the time threshold. Default is T. This occurs because if we set our time threshold to e.g. 10 minutes (the default), there are some GPS points that occur closer together than 10 minutes apart (e.g. if we experimentally set the tags to take points every 5 minutes). As a result, we will "group" together the same individual with itself, resulting in some self edges. I currently have a step in the code that simply removes these self edges, so there should be no problem here. But if you set `quiet = F`, you will at least be warned with the message `"Warning: found duplicate id in a timegroup and/or splitBy - does your group_times threshold match the fix rate?"` when this is occurring.}

\item{includeAllVertices}{logical. Whether to include another list item in the output that's a vector of all individuals in the dataset. For use in creating sparse graphs. Default is F.}

\item{daytimeOnly}{T/F, whether to restrict interactions to daytime only. Default is T.}

\item{return}{One of "edges" (default, returns an edgelist, would need to be used in conjunction with includeAllVertices = T in order to include all individuals, since otherwise they wouldn't be included in the edgelist. Also includes timegroup information, which SRI cannot do. One row in this data frame represents a single edge in a single timegroup.); "sri" (returns a data frame with three columns, ID1, ID2, and sri. Includes pairs whose SRI values are 0, which means it includes all individuals and renders includeAllVertices obsolete.); and "both" (returns a list with two components: "edges" and "sri" as described above.)}
}
\value{
An edge list containing the following columns: `timegroup` gives the numeric index of the timegroup during which the interaction takes place. `minTimestamp` and `maxTimestamp` give the beginning and end times of that timegroup. `ID1` is the id of the first individual in this edge, and `ID2` is the id of the second individual in this edge.
}
\description{
Given a dataset of GPS points, a geographic mask, and some roost polygons, create an edge list.
}
